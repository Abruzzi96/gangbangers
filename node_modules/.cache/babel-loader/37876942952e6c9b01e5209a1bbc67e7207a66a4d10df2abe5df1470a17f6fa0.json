{"ast":null,"code":"var _jsxFileName = \"/home/guns/Documents/gangbangers/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmedPassword, setConfirmedPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmedPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:4000/register', {\n        email,\n        username,\n        password\n      });\n      console.log('User registered successfully:', response.data);\n      // Optionally redirect or show a success message\n      navigate('/login'); // Navigate to login page\n    } catch (error) {\n      console.error('Registration error:', error);\n      // Handle error, show an alert, etc.\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === 'email') setEmail(value);else if (name === 'username') setUsername(value);else if (name === 'password') setPassword(value);else if (name === 'confirmedPassword') setConfirmedPassword(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          name: \"email\",\n          type: \"email\",\n          value: email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          name: \"username\",\n          type: \"username\",\n          value: username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          name: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmedPassword\",\n        children: [\"Confirm Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"confirmedPassword\",\n          name: \"confirmedPassword\",\n          type: \"password\",\n          value: confirmedPassword,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"VKZ8BvvUWPMCUQK8TjnFFKYDzwo=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Register","_s","email","setEmail","username","setUsername","password","setPassword","confirmedPassword","setConfirmedPassword","navigate","handleSubmit","event","preventDefault","alert","response","post","console","log","data","error","handleChange","name","value","target","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","onChange","required","_c","$RefreshReg$"],"sources":["/home/guns/Documents/gangbangers/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Register = () => {\n    const [email, setEmail] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmedPassword, setConfirmedPassword] = useState('');\n    const navigate = useNavigate();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        \n        if (password !== confirmedPassword) {\n            alert('Passwords do not match');\n            return;\n        }\n\n        try {\n            const response = await axios.post('http://localhost:4000/register', { email, username, password });\n            console.log('User registered successfully:', response.data);\n            // Optionally redirect or show a success message\n            navigate('/login'); // Navigate to login page\n        } catch (error) {\n            console.error('Registration error:', error);\n            // Handle error, show an alert, etc.\n        }\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'email') setEmail(value);\n        else if (name === 'username') setUsername(value);\n        else if (name === 'password') setPassword(value);\n        else if (name === 'confirmedPassword') setConfirmedPassword(value);\n    };\n\n    return (\n        <div>\n            <h1><center>Register</center></h1>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"email\">\n                    Email\n                    <input\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        value={email}\n                        onChange={handleChange}\n                        required\n                    />\n                </label>\n                <label htmlFor=\"username\">\n                    Username\n                    <input\n                        id=\"username\"\n                        name=\"username\"\n                        type=\"username\"\n                        value={username}\n                        onChange={handleChange}\n                        required\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    Password\n                    <input\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={handleChange}\n                        required\n                    />\n                </label>\n                <label htmlFor=\"confirmedPassword\">\n                    Confirm Password\n                    <input\n                        id=\"confirmedPassword\"\n                        name=\"confirmedPassword\"\n                        type=\"password\"\n                        value={confirmedPassword}\n                        onChange={handleChange}\n                        required\n                    />\n                </label>\n                <button type=\"submit\">Register</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Register;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAIP,QAAQ,KAAKE,iBAAiB,EAAE;MAChCM,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACJ;IAEA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,gCAAgC,EAAE;QAAEd,KAAK;QAAEE,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAClGW,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAC3D;MACAT,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C;IACJ;EACJ,CAAC;EAED,MAAMC,YAAY,GAAIT,KAAK,IAAK;IAC5B,MAAM;MAAEU,IAAI;MAAEC;IAAM,CAAC,GAAGX,KAAK,CAACY,MAAM;IACpC,IAAIF,IAAI,KAAK,OAAO,EAAEnB,QAAQ,CAACoB,KAAK,CAAC,CAAC,KACjC,IAAID,IAAI,KAAK,UAAU,EAAEjB,WAAW,CAACkB,KAAK,CAAC,CAAC,KAC5C,IAAID,IAAI,KAAK,UAAU,EAAEf,WAAW,CAACgB,KAAK,CAAC,CAAC,KAC5C,IAAID,IAAI,KAAK,mBAAmB,EAAEb,oBAAoB,CAACc,KAAK,CAAC;EACtE,CAAC;EAED,oBACIxB,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,eAAI1B,OAAA;QAAA0B,QAAA,EAAQ;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC9B,OAAA;MAAM+B,QAAQ,EAAEnB,YAAa;MAAAc,QAAA,gBACzB1B,OAAA;QAAOgC,OAAO,EAAC,OAAO;QAAAN,QAAA,GAAC,OAEnB,eAAA1B,OAAA;UACIiC,EAAE,EAAC,OAAO;UACVV,IAAI,EAAC,OAAO;UACZW,IAAI,EAAC,OAAO;UACZV,KAAK,EAAErB,KAAM;UACbgC,QAAQ,EAAEb,YAAa;UACvBc,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACR9B,OAAA;QAAOgC,OAAO,EAAC,UAAU;QAAAN,QAAA,GAAC,UAEtB,eAAA1B,OAAA;UACIiC,EAAE,EAAC,UAAU;UACbV,IAAI,EAAC,UAAU;UACfW,IAAI,EAAC,UAAU;UACfV,KAAK,EAAEnB,QAAS;UAChB8B,QAAQ,EAAEb,YAAa;UACvBc,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACR9B,OAAA;QAAOgC,OAAO,EAAC,UAAU;QAAAN,QAAA,GAAC,UAEtB,eAAA1B,OAAA;UACIiC,EAAE,EAAC,UAAU;UACbV,IAAI,EAAC,UAAU;UACfW,IAAI,EAAC,UAAU;UACfV,KAAK,EAAEjB,QAAS;UAChB4B,QAAQ,EAAEb,YAAa;UACvBc,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACR9B,OAAA;QAAOgC,OAAO,EAAC,mBAAmB;QAAAN,QAAA,GAAC,kBAE/B,eAAA1B,OAAA;UACIiC,EAAE,EAAC,mBAAmB;UACtBV,IAAI,EAAC,mBAAmB;UACxBW,IAAI,EAAC,UAAU;UACfV,KAAK,EAAEf,iBAAkB;UACzB0B,QAAQ,EAAEb,YAAa;UACvBc,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACR9B,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAC5B,EAAA,CAtFID,QAAQ;EAAA,QAKOH,WAAW;AAAA;AAAAuC,EAAA,GAL1BpC,QAAQ;AAwFd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}